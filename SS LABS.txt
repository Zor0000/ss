1. Addition and subtraction of 2 no.

#!/bin/bash

# Prompt the user to enter the first number
echo "Enter the first number:"
read num1

# Prompt the user to enter the second number
echo "Enter the second number:"
read num2

# Perform addition
sum=$((num1 + num2))

# Perform subtraction
difference=$((num1 - num2))

# Display the results
echo "Sum: $sum"
echo "Difference: $difference"

2. Swapping of two nos using the third variable and without the third variable

#!/bin/bash

# Define the two numbers
num1=10
num2=20

echo "Before swapping:"
echo "Number 1: $num1"
echo "Number 2: $num2"

# Swapping using a third variable
temp=$num1
num1=$num2
num2=$temp

echo "After swapping using a third variable:"
echo "Number 1: $num1"
echo "Number 2: $num2"

3. Largest Among 2 numbers.

#!/bin/bash

# Read two numbers from the user
read -p "Enter the first number: " a
read -p "Enter the second number: " b

# Find the maximum using conditional statements
max=$a
if [ $b -gt $max ]; then
    max=$b
fi

echo "The largest number is: $max"

4. Largest among 3 no.

#!/bin/bash

# Read three numbers from the user
read -p "Enter the first number: " a
read -p "Enter the second number: " b
read -p "Enter the third number: " c

# Find the maximum using conditional statements
max=$a
if [ $b -gt $max ]; then
    max=$b
fi
if [ $c -gt $max ]; then
    max=$c
fi

echo "The largest number is: $max"

5. Shell Script to check whether a given number is a palindrome or not.
What is palindrome number ?
= A palindrome is a number that remains the same when its digits are reversed. For example,
121 is a palindrome, but 123 is not.

#!/bin/bash

echo "Enter a number: "
read number

reverse=0
original=$number

while [ $number -ne 0 ]
do
    remainder=$((number % 10))
    reverse=$(($reverse * 10 + $remainder))
    number=$(($number / 10))
done

if [ $original -eq $reverse ]
then
    echo "Original is a palindrome."
else
    echo "Original is not a palindrome."
fi

6. Shell Script to find the Sum of n numbers using for loop
Code 

#!/bin/bash

echo "Enter Size(N)"
read N

i=1
sum=0

echo "Enter Numbers"
while [ $i -le $N ]
do
    read num
    sum=$(($sum + num))
    i=$(($i + 1))
done

echo $sum

7. Shell script to print Fibonacci series.

#!/bin/bash

echo "How many number of terms to be generated?"
read n

function fibonacci {
    x=0
    y=1
    i=2

    echo "Fibonacci Series up to $n terms:"
    echo "$x"
    echo "$y"

    while [ $i -lt $n ]
    do
        i=`expr $i + 1`
        z=`expr $x + $y`
        echo "$z"
        x=$y
        y=$z
    done
}

result=`fibonacci $n`
echo "$result"

8. Shell script to find the factorial of a number using recursion.

#!/bin/bash
# Recursive factorial function
factorial() {
    local num=$1

    # Base case: If num is 0 or 1, return 1
    if ((num <= 1)); then
        echo 1
    else
        # Recursive call
        local subfactorial=$(factorial $((num - 1)))
        echo $((num * subfactorial))
    fi
}

# Main program
echo "Enter a positive integer:"
read input_num

# Validate input (ensure it's a positive integer)
if [[ $input_num =~ ^[1-9][0-9]*$ ]]; then
    result=$(factorial $input_num)
    echo "Factorial of $input_num is: $result"
else
    echo "Invalid input. Please enter a positive integer."
fi

9. Shell script for string tokenization

#!/usr/bin/bash
echo "Enter a sentence: "
read sentence
IFS =' ' read - ra  tokens <<< "$sentence"
# Print individual tokens
echo "Tokens:"
for token in "${tokens[@]}"; do
   echo "$token"
done

